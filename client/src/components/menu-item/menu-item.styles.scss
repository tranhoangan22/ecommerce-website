.menu-item {
  // height: ${({size}) => (size ? "380px" : "240px")}
  min-width: 30%;
  height: 400px;
  flex: 1 1 auto;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid black;
  margin: 0 7.5px 15px;
  overflow: hidden; // the image will not scale outside of the `menu-item` div

  &:hover {
	  // when hovering over, the cursor will go to the pointer (instead of the arrow, it is a finger)
    cursor: pointer;

    // inside of that, any elements with the class `background-image` will have this style
    & .background-image {
      transform: scale(1.1); // scale the image to 1.1 times the size of current image
      transition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95); // we want to target the transform: whenever it scales, it scales at a speed
    }

    & .content {
      opacity: 0.9;
    }
  }

  // same as `.menu-item.large { height: 500px;} ` in css
  &.large {
    height: 500px;
  }

  &:first-child {
    margin-right: 7.5px;
  }

  &:last-child {
    margin-left: 7.5px;
  }

  .background-image {
    // same size as the container (`.menu-item`)
    width: 100%;
    height: 100%;
    background-position: center;
    background-size: cover;
  }

  .content {
    height: 90px;
    padding: 0 25px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border: 1px solid black;
    background-color: white;
    opacity: 0.7;
    position: absolute; // content will be in the center of the parent div regardless of what the previous element is. This means, the content will be in the center of the background image.

    .title {
      font-weight: bold;
      margin-bottom: 6px;
      font-size: 22px;
      color: #4a4a4a;
    }

    .subtitle {
      font-weight: lighter;
      font-size: 16px;
    }
  }
}
